package Глава3_Типы_данных;

public class Массивы {

//      Массивы это группа однотипных переменных, для обращения
//      к воторым используется общее имя
//      Пример массива состоящих из элементов int
      int int_array_ex[];
//      создание массива в области памяти с помощи операции new
//      переменная_массива = new тип [размер]
//      массивы создаются в методе main

}


//Продемонстрировать применение одномерного массива

class Array{
    public static void main(String[] args) {
        int int_array[];
        int_array = new int[12];
        // В этом массиве каждое отдельное число является
        // числом дней в каждом месяце года
        int_array[0] = 31;
        int_array[1] = 28;
        int_array[2] = 31;
        int_array[3] = 30;
        int_array[4] = 31;
        int_array[5] = 30;
        int_array[6] = 31;
        int_array[7] = 31;
        int_array[8] = 30;
        int_array[9] = 31;
        int_array[10] = 30;
        int_array[11] = 31;
    System.out.println("В апреле " + int_array[4] + " " + "дней");

    }
}
// *** до массива невозможно добраться из другого класса *** //
//Усовершенствованная версия предыдущей программы
class AutoArray {
    public static void main(String[] args) {
        int int_array[] = {31,28,31,30,31,30,31,31,30,31,30,31};
        //здесь не надо писать операцию new
    System.out.println("В апреле " + int_array[4] + " дней");
    }
}

//Вычисление среднего значения из массива
class Average{
    public static void main(String[] args) {
        double nums[] = {10.1, 10.2, 10.3, 10.4, 10.5};
        double result = 0;
        int i;
        for (i = 0; i < 5; i++)
            result = result + nums[i];
        System.out.println("Среднее значение равно " + result / 5);

    }
}

//Продемонстрировать применение двухмерного массива
class TwoDArray {
    public static void main(String[] args) {
        int twoD[][] = new int [12][12];
        //Массив размерностью 12 на 12
        int i,j;
        int k = 0;
//В этом цикле циклы перебирают значения i и j длину и ширину массива
//Одновременно в цикле выполняется присваивание значениям массива
//Здесь число i и j не должно превышать размерность массива
        for(i = 0;i < 4;i+=1)
            for(j = 0;j < 5; j+=1){
                twoD[i][j] = k;
                k++;
        }
//Случай когда присваивается значения каждым вторым ячейкам массива
//В ячейки которые цикл не произвел операцию присвоения по умолчанию равны 0
//        for(i = 0;i < 4;i+=2)
//            for(j = 0;j < 5; j+=2){
//                twoD[i][j] = k;
//                k++;
//        }
//Перед выводом в консоль эти два цикла устанавливают размер
//массива массив размерностью i ширина j высота массива
//Предыдущие два цика устанавливают максимальное
//количество допутимых чисел типа int в строке и столбце массива
//которое не должно превышать размерность массива int twoD[][]
//И если значения i и j меньше размера массива то в не присвоенные
//значения по умолчанию выводится 0 Такой же случай и с итерацией больше ++
//например +=2 присвоит j либо i каждому второму значению строки или столбца
//значения ячейки массива присваивает значение k для текущей ячейки
        for(i = 0;i < 12;i++) {// Эта скобка заносит в этот цикл перед которым
            // стоит эта скобка вывод System.out.print(); System.out.println();
            for (j = 0; j < 12; j++)
                System.out.print(twoD[i][j] + " ");
            System.out.println();
        }
    }
}

//Резервирование памяти вручную для массива с разной
//размерностью второого измерения
class TwoAgain {
    public static void main(String[] args) {
        int two[][] = new int[4][];
        two[0] = new int[1];
        two[1] = new int[2];
        two[2] = new int[3];
        two[3] = new int[4];
        int i, j, k = 0;

        for (i = 0; i < 4; i++)
            for (j = 0; j < i + 1; j++) {
                two[i][j] = k;
                k++;
            }

        for (i = 0; i < 4; i++) {
            for (j = 0; j < i + 1; j++)
                System.out.print(two[i][j] + " ");
            System.out.println();
        }
    }
}


//Продемонстрировать применение трехмерного массива
//В этом примере я не стал переписывать с абсолютной точностью тот код который рассматривался в книге
// для применения трехмерного массива чтобы обратить внимание на то что в трехмерном массиве первая
// квадратная скобка это номер массива и количество присвоенных данных в первой квадратной скобке скорее
// всего любых различных типов данных примитивных или ссылочных соответсвует количеству массивов в заданном присвоении
// Остальные две квадратные скобки это тот же двумерный массив как и в предыдущих примерах
class ThreeDMatrix {

    //Первая квадратная скобка это количество двумерных массивов вторая и третья скобка
    //как в предыдущем примере двумерного массива

    //здесь число i количество экземпляров массива взятые по длине и ширине
    //здесь число j ширина массива количество строчек
    //здесь число k длина массива длина строчек


    int i = 5, j = 5, k = 5;
    int Demo = k;
    public void threeDemo(){
        int three[][][] = new int[i][j][k];
        for (i = 0; i < 5; i++)
            for (j = 0; j < 4; j++)
                for (k = 0; k < Demo; k++)
                    three[i][j][k] = k;k++;


        for (i = 0; i < 5; i++) {
            for (j = 0; j < 4; j++) {
                for (k = 0; k < Demo; k++)
                    System.out.print(three[i][j][k] + " ");
                System.out.println();
            }
            System.out.println();
        }
    }
    public void three(){
        int three[][][] = new int[i][j][k];
        for (i = 0; i < 5; i++)
            for (j = 0; j < 4; j++)
                for (k = 0; k < Demo; k++)
                    three[i][j][k] = k++;


        for (i = 0; i < 5; i++) {
            for (j = 0; j < 4; j++) {
                for (k = 0; k < Demo; k++)

                    System.out.print(three[i][j][k] + " ");
                System.out.println();
            }
            System.out.println();
        }

    }
    public static void main(String[] args) {
        ThreeDMatrix Array = new ThreeDMatrix();
        Array.threeDemo();
        Array.three();
    }
}







